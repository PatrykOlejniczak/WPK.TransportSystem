//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleApplication1.BoostAccountCreator {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BoostAccount", Namespace="Wpk.Entities")]
    [System.SerializableAttribute()]
    public partial class BoostAccount : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CustomerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateOfBoostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime GeneratedDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((this.CustomerIdField.Equals(value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateOfBoost {
            get {
                return this.DateOfBoostField;
            }
            set {
                if ((this.DateOfBoostField.Equals(value) != true)) {
                    this.DateOfBoostField = value;
                    this.RaisePropertyChanged("DateOfBoost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime GeneratedDateTime {
            get {
                return this.GeneratedDateTimeField;
            }
            set {
                if ((this.GeneratedDateTimeField.Equals(value) != true)) {
                    this.GeneratedDateTimeField = value;
                    this.RaisePropertyChanged("GeneratedDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BoostAccountCreator.IBoostAccountCreatorService")]
    public interface IBoostAccountCreatorService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBoostAccountCreatorService/GetNewCodeFor", ReplyAction="http://tempuri.org/IBoostAccountCreatorService/GetNewCodeForResponse")]
        string GetNewCodeFor(double amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBoostAccountCreatorService/GetNewCodeFor", ReplyAction="http://tempuri.org/IBoostAccountCreatorService/GetNewCodeForResponse")]
        System.Threading.Tasks.Task<string> GetNewCodeForAsync(double amount);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBoostAccountCreatorServiceChannel : ConsoleApplication1.BoostAccountCreator.IBoostAccountCreatorService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BoostAccountCreatorServiceClient : System.ServiceModel.ClientBase<ConsoleApplication1.BoostAccountCreator.IBoostAccountCreatorService>, ConsoleApplication1.BoostAccountCreator.IBoostAccountCreatorService {
        
        public BoostAccountCreatorServiceClient() {
        }
        
        public BoostAccountCreatorServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BoostAccountCreatorServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BoostAccountCreatorServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BoostAccountCreatorServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetNewCodeFor(double amount) {
            return base.Channel.GetNewCodeFor(amount);
        }
        
        public System.Threading.Tasks.Task<string> GetNewCodeForAsync(double amount) {
            return base.Channel.GetNewCodeForAsync(amount);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BoostAccountCreator.IBoostAccountSecureService")]
    public interface IBoostAccountSecureService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBoostAccountSecureService/GetAll", ReplyAction="http://tempuri.org/IBoostAccountSecureService/GetAllResponse")]
        ConsoleApplication1.BoostAccountCreator.BoostAccount[] GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBoostAccountSecureService/GetAll", ReplyAction="http://tempuri.org/IBoostAccountSecureService/GetAllResponse")]
        System.Threading.Tasks.Task<ConsoleApplication1.BoostAccountCreator.BoostAccount[]> GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBoostAccountSecureService/GetLastest", ReplyAction="http://tempuri.org/IBoostAccountSecureService/GetLastestResponse")]
        ConsoleApplication1.BoostAccountCreator.BoostAccount[] GetLastest(int number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBoostAccountSecureService/GetLastest", ReplyAction="http://tempuri.org/IBoostAccountSecureService/GetLastestResponse")]
        System.Threading.Tasks.Task<ConsoleApplication1.BoostAccountCreator.BoostAccount[]> GetLastestAsync(int number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBoostAccountSecureService/GetActivatedAfterDate", ReplyAction="http://tempuri.org/IBoostAccountSecureService/GetActivatedAfterDateResponse")]
        ConsoleApplication1.BoostAccountCreator.BoostAccount[] GetActivatedAfterDate(System.DateTime dateTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBoostAccountSecureService/GetActivatedAfterDate", ReplyAction="http://tempuri.org/IBoostAccountSecureService/GetActivatedAfterDateResponse")]
        System.Threading.Tasks.Task<ConsoleApplication1.BoostAccountCreator.BoostAccount[]> GetActivatedAfterDateAsync(System.DateTime dateTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBoostAccountSecureService/GetActivatedToDate", ReplyAction="http://tempuri.org/IBoostAccountSecureService/GetActivatedToDateResponse")]
        ConsoleApplication1.BoostAccountCreator.BoostAccount[] GetActivatedToDate(System.DateTime dateTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBoostAccountSecureService/GetActivatedToDate", ReplyAction="http://tempuri.org/IBoostAccountSecureService/GetActivatedToDateResponse")]
        System.Threading.Tasks.Task<ConsoleApplication1.BoostAccountCreator.BoostAccount[]> GetActivatedToDateAsync(System.DateTime dateTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBoostAccountSecureService/GetWithUsedCode", ReplyAction="http://tempuri.org/IBoostAccountSecureService/GetWithUsedCodeResponse")]
        ConsoleApplication1.BoostAccountCreator.BoostAccount[] GetWithUsedCode();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBoostAccountSecureService/GetWithUsedCode", ReplyAction="http://tempuri.org/IBoostAccountSecureService/GetWithUsedCodeResponse")]
        System.Threading.Tasks.Task<ConsoleApplication1.BoostAccountCreator.BoostAccount[]> GetWithUsedCodeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBoostAccountSecureService/GetWithNotUsedCode", ReplyAction="http://tempuri.org/IBoostAccountSecureService/GetWithNotUsedCodeResponse")]
        ConsoleApplication1.BoostAccountCreator.BoostAccount[] GetWithNotUsedCode();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBoostAccountSecureService/GetWithNotUsedCode", ReplyAction="http://tempuri.org/IBoostAccountSecureService/GetWithNotUsedCodeResponse")]
        System.Threading.Tasks.Task<ConsoleApplication1.BoostAccountCreator.BoostAccount[]> GetWithNotUsedCodeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBoostAccountSecureService/GetGeneratedAfterDate", ReplyAction="http://tempuri.org/IBoostAccountSecureService/GetGeneratedAfterDateResponse")]
        ConsoleApplication1.BoostAccountCreator.BoostAccount[] GetGeneratedAfterDate(System.DateTime dateTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBoostAccountSecureService/GetGeneratedAfterDate", ReplyAction="http://tempuri.org/IBoostAccountSecureService/GetGeneratedAfterDateResponse")]
        System.Threading.Tasks.Task<ConsoleApplication1.BoostAccountCreator.BoostAccount[]> GetGeneratedAfterDateAsync(System.DateTime dateTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBoostAccountSecureService/GetGeneratedToDate", ReplyAction="http://tempuri.org/IBoostAccountSecureService/GetGeneratedToDateResponse")]
        ConsoleApplication1.BoostAccountCreator.BoostAccount[] GetGeneratedToDate(System.DateTime dateTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBoostAccountSecureService/GetGeneratedToDate", ReplyAction="http://tempuri.org/IBoostAccountSecureService/GetGeneratedToDateResponse")]
        System.Threading.Tasks.Task<ConsoleApplication1.BoostAccountCreator.BoostAccount[]> GetGeneratedToDateAsync(System.DateTime dateTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBoostAccountSecureService/GetWhereAmountMoreThan", ReplyAction="http://tempuri.org/IBoostAccountSecureService/GetWhereAmountMoreThanResponse")]
        ConsoleApplication1.BoostAccountCreator.BoostAccount[] GetWhereAmountMoreThan(double amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBoostAccountSecureService/GetWhereAmountMoreThan", ReplyAction="http://tempuri.org/IBoostAccountSecureService/GetWhereAmountMoreThanResponse")]
        System.Threading.Tasks.Task<ConsoleApplication1.BoostAccountCreator.BoostAccount[]> GetWhereAmountMoreThanAsync(double amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBoostAccountSecureService/GetWhereAmountLessThan", ReplyAction="http://tempuri.org/IBoostAccountSecureService/GetWhereAmountLessThanResponse")]
        ConsoleApplication1.BoostAccountCreator.BoostAccount[] GetWhereAmountLessThan(double amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBoostAccountSecureService/GetWhereAmountLessThan", ReplyAction="http://tempuri.org/IBoostAccountSecureService/GetWhereAmountLessThanResponse")]
        System.Threading.Tasks.Task<ConsoleApplication1.BoostAccountCreator.BoostAccount[]> GetWhereAmountLessThanAsync(double amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBoostAccountSecureService/GetById", ReplyAction="http://tempuri.org/IBoostAccountSecureService/GetByIdResponse")]
        ConsoleApplication1.BoostAccountCreator.BoostAccount GetById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBoostAccountSecureService/GetById", ReplyAction="http://tempuri.org/IBoostAccountSecureService/GetByIdResponse")]
        System.Threading.Tasks.Task<ConsoleApplication1.BoostAccountCreator.BoostAccount> GetByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBoostAccountSecureService/GetByCustomer", ReplyAction="http://tempuri.org/IBoostAccountSecureService/GetByCustomerResponse")]
        ConsoleApplication1.BoostAccountCreator.BoostAccount GetByCustomer(int cutomerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBoostAccountSecureService/GetByCustomer", ReplyAction="http://tempuri.org/IBoostAccountSecureService/GetByCustomerResponse")]
        System.Threading.Tasks.Task<ConsoleApplication1.BoostAccountCreator.BoostAccount> GetByCustomerAsync(int cutomerId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBoostAccountSecureServiceChannel : ConsoleApplication1.BoostAccountCreator.IBoostAccountSecureService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BoostAccountSecureServiceClient : System.ServiceModel.ClientBase<ConsoleApplication1.BoostAccountCreator.IBoostAccountSecureService>, ConsoleApplication1.BoostAccountCreator.IBoostAccountSecureService {
        
        public BoostAccountSecureServiceClient() {
        }
        
        public BoostAccountSecureServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BoostAccountSecureServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BoostAccountSecureServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BoostAccountSecureServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ConsoleApplication1.BoostAccountCreator.BoostAccount[] GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication1.BoostAccountCreator.BoostAccount[]> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
        
        public ConsoleApplication1.BoostAccountCreator.BoostAccount[] GetLastest(int number) {
            return base.Channel.GetLastest(number);
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication1.BoostAccountCreator.BoostAccount[]> GetLastestAsync(int number) {
            return base.Channel.GetLastestAsync(number);
        }
        
        public ConsoleApplication1.BoostAccountCreator.BoostAccount[] GetActivatedAfterDate(System.DateTime dateTime) {
            return base.Channel.GetActivatedAfterDate(dateTime);
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication1.BoostAccountCreator.BoostAccount[]> GetActivatedAfterDateAsync(System.DateTime dateTime) {
            return base.Channel.GetActivatedAfterDateAsync(dateTime);
        }
        
        public ConsoleApplication1.BoostAccountCreator.BoostAccount[] GetActivatedToDate(System.DateTime dateTime) {
            return base.Channel.GetActivatedToDate(dateTime);
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication1.BoostAccountCreator.BoostAccount[]> GetActivatedToDateAsync(System.DateTime dateTime) {
            return base.Channel.GetActivatedToDateAsync(dateTime);
        }
        
        public ConsoleApplication1.BoostAccountCreator.BoostAccount[] GetWithUsedCode() {
            return base.Channel.GetWithUsedCode();
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication1.BoostAccountCreator.BoostAccount[]> GetWithUsedCodeAsync() {
            return base.Channel.GetWithUsedCodeAsync();
        }
        
        public ConsoleApplication1.BoostAccountCreator.BoostAccount[] GetWithNotUsedCode() {
            return base.Channel.GetWithNotUsedCode();
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication1.BoostAccountCreator.BoostAccount[]> GetWithNotUsedCodeAsync() {
            return base.Channel.GetWithNotUsedCodeAsync();
        }
        
        public ConsoleApplication1.BoostAccountCreator.BoostAccount[] GetGeneratedAfterDate(System.DateTime dateTime) {
            return base.Channel.GetGeneratedAfterDate(dateTime);
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication1.BoostAccountCreator.BoostAccount[]> GetGeneratedAfterDateAsync(System.DateTime dateTime) {
            return base.Channel.GetGeneratedAfterDateAsync(dateTime);
        }
        
        public ConsoleApplication1.BoostAccountCreator.BoostAccount[] GetGeneratedToDate(System.DateTime dateTime) {
            return base.Channel.GetGeneratedToDate(dateTime);
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication1.BoostAccountCreator.BoostAccount[]> GetGeneratedToDateAsync(System.DateTime dateTime) {
            return base.Channel.GetGeneratedToDateAsync(dateTime);
        }
        
        public ConsoleApplication1.BoostAccountCreator.BoostAccount[] GetWhereAmountMoreThan(double amount) {
            return base.Channel.GetWhereAmountMoreThan(amount);
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication1.BoostAccountCreator.BoostAccount[]> GetWhereAmountMoreThanAsync(double amount) {
            return base.Channel.GetWhereAmountMoreThanAsync(amount);
        }
        
        public ConsoleApplication1.BoostAccountCreator.BoostAccount[] GetWhereAmountLessThan(double amount) {
            return base.Channel.GetWhereAmountLessThan(amount);
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication1.BoostAccountCreator.BoostAccount[]> GetWhereAmountLessThanAsync(double amount) {
            return base.Channel.GetWhereAmountLessThanAsync(amount);
        }
        
        public ConsoleApplication1.BoostAccountCreator.BoostAccount GetById(int id) {
            return base.Channel.GetById(id);
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication1.BoostAccountCreator.BoostAccount> GetByIdAsync(int id) {
            return base.Channel.GetByIdAsync(id);
        }
        
        public ConsoleApplication1.BoostAccountCreator.BoostAccount GetByCustomer(int cutomerId) {
            return base.Channel.GetByCustomer(cutomerId);
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication1.BoostAccountCreator.BoostAccount> GetByCustomerAsync(int cutomerId) {
            return base.Channel.GetByCustomerAsync(cutomerId);
        }
    }
}
