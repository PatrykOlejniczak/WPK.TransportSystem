//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ManagingSystem.TicketTypeService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TicketType", Namespace="Wpk.Entities")]
    [System.SerializableAttribute()]
    public partial class TicketType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TicketTypeService.ITicketTypeSecureService")]
    public interface ITicketTypeSecureService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITicketTypeSecureService/Create", ReplyAction="http://tempuri.org/ITicketTypeSecureService/CreateResponse")]
        void Create(ManagingSystem.TicketTypeService.TicketType ticketType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITicketTypeSecureService/Create", ReplyAction="http://tempuri.org/ITicketTypeSecureService/CreateResponse")]
        System.Threading.Tasks.Task CreateAsync(ManagingSystem.TicketTypeService.TicketType ticketType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITicketTypeSecureService/Update", ReplyAction="http://tempuri.org/ITicketTypeSecureService/UpdateResponse")]
        void Update(ManagingSystem.TicketTypeService.TicketType ticketType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITicketTypeSecureService/Update", ReplyAction="http://tempuri.org/ITicketTypeSecureService/UpdateResponse")]
        System.Threading.Tasks.Task UpdateAsync(ManagingSystem.TicketTypeService.TicketType ticketType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITicketTypeSecureService/DeleteById", ReplyAction="http://tempuri.org/ITicketTypeSecureService/DeleteByIdResponse")]
        void DeleteById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITicketTypeSecureService/DeleteById", ReplyAction="http://tempuri.org/ITicketTypeSecureService/DeleteByIdResponse")]
        System.Threading.Tasks.Task DeleteByIdAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITicketTypeSecureServiceChannel : ManagingSystem.TicketTypeService.ITicketTypeSecureService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TicketTypeSecureServiceClient : System.ServiceModel.ClientBase<ManagingSystem.TicketTypeService.ITicketTypeSecureService>, ManagingSystem.TicketTypeService.ITicketTypeSecureService {
        
        public TicketTypeSecureServiceClient() {
        }
        
        public TicketTypeSecureServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TicketTypeSecureServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TicketTypeSecureServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TicketTypeSecureServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Create(ManagingSystem.TicketTypeService.TicketType ticketType) {
            base.Channel.Create(ticketType);
        }
        
        public System.Threading.Tasks.Task CreateAsync(ManagingSystem.TicketTypeService.TicketType ticketType) {
            return base.Channel.CreateAsync(ticketType);
        }
        
        public void Update(ManagingSystem.TicketTypeService.TicketType ticketType) {
            base.Channel.Update(ticketType);
        }
        
        public System.Threading.Tasks.Task UpdateAsync(ManagingSystem.TicketTypeService.TicketType ticketType) {
            return base.Channel.UpdateAsync(ticketType);
        }
        
        public void DeleteById(int id) {
            base.Channel.DeleteById(id);
        }
        
        public System.Threading.Tasks.Task DeleteByIdAsync(int id) {
            return base.Channel.DeleteByIdAsync(id);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TicketTypeService.ITicketTypeService")]
    public interface ITicketTypeService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITicketTypeService/GetAll", ReplyAction="http://tempuri.org/ITicketTypeService/GetAllResponse")]
        ManagingSystem.TicketTypeService.TicketType[] GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITicketTypeService/GetAll", ReplyAction="http://tempuri.org/ITicketTypeService/GetAllResponse")]
        System.Threading.Tasks.Task<ManagingSystem.TicketTypeService.TicketType[]> GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITicketTypeService/GetById", ReplyAction="http://tempuri.org/ITicketTypeService/GetByIdResponse")]
        ManagingSystem.TicketTypeService.TicketType GetById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITicketTypeService/GetById", ReplyAction="http://tempuri.org/ITicketTypeService/GetByIdResponse")]
        System.Threading.Tasks.Task<ManagingSystem.TicketTypeService.TicketType> GetByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITicketTypeService/GetByName", ReplyAction="http://tempuri.org/ITicketTypeService/GetByNameResponse")]
        ManagingSystem.TicketTypeService.TicketType GetByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITicketTypeService/GetByName", ReplyAction="http://tempuri.org/ITicketTypeService/GetByNameResponse")]
        System.Threading.Tasks.Task<ManagingSystem.TicketTypeService.TicketType> GetByNameAsync(string name);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITicketTypeServiceChannel : ManagingSystem.TicketTypeService.ITicketTypeService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TicketTypeServiceClient : System.ServiceModel.ClientBase<ManagingSystem.TicketTypeService.ITicketTypeService>, ManagingSystem.TicketTypeService.ITicketTypeService {
        
        public TicketTypeServiceClient() {
        }
        
        public TicketTypeServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TicketTypeServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TicketTypeServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TicketTypeServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ManagingSystem.TicketTypeService.TicketType[] GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<ManagingSystem.TicketTypeService.TicketType[]> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
        
        public ManagingSystem.TicketTypeService.TicketType GetById(int id) {
            return base.Channel.GetById(id);
        }
        
        public System.Threading.Tasks.Task<ManagingSystem.TicketTypeService.TicketType> GetByIdAsync(int id) {
            return base.Channel.GetByIdAsync(id);
        }
        
        public ManagingSystem.TicketTypeService.TicketType GetByName(string name) {
            return base.Channel.GetByName(name);
        }
        
        public System.Threading.Tasks.Task<ManagingSystem.TicketTypeService.TicketType> GetByNameAsync(string name) {
            return base.Channel.GetByNameAsync(name);
        }
    }
}
