//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ManagingSystem.CustomerSecureService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Customer", Namespace="Wpk.Entities")]
    [System.SerializableAttribute()]
    public partial class Customer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AccountBallanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HashPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDeletedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double AccountBallance {
            get {
                return this.AccountBallanceField;
            }
            set {
                if ((this.AccountBallanceField.Equals(value) != true)) {
                    this.AccountBallanceField = value;
                    this.RaisePropertyChanged("AccountBallance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HashPassword {
            get {
                return this.HashPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.HashPasswordField, value) != true)) {
                    this.HashPasswordField = value;
                    this.RaisePropertyChanged("HashPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CustomerSecureService.ICustomerSecureService")]
    public interface ICustomerSecureService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerSecureService/GetAll", ReplyAction="http://tempuri.org/ICustomerSecureService/GetAllResponse")]
        ManagingSystem.CustomerSecureService.Customer[] GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerSecureService/GetAll", ReplyAction="http://tempuri.org/ICustomerSecureService/GetAllResponse")]
        System.Threading.Tasks.Task<ManagingSystem.CustomerSecureService.Customer[]> GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerSecureService/GetWhereAccountBallanceMoreThan", ReplyAction="http://tempuri.org/ICustomerSecureService/GetWhereAccountBallanceMoreThanResponse" +
            "")]
        ManagingSystem.CustomerSecureService.Customer[] GetWhereAccountBallanceMoreThan(double ballance);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerSecureService/GetWhereAccountBallanceMoreThan", ReplyAction="http://tempuri.org/ICustomerSecureService/GetWhereAccountBallanceMoreThanResponse" +
            "")]
        System.Threading.Tasks.Task<ManagingSystem.CustomerSecureService.Customer[]> GetWhereAccountBallanceMoreThanAsync(double ballance);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerSecureService/GetWhereAccountBallanceLessThan", ReplyAction="http://tempuri.org/ICustomerSecureService/GetWhereAccountBallanceLessThanResponse" +
            "")]
        ManagingSystem.CustomerSecureService.Customer[] GetWhereAccountBallanceLessThan(double ballance);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerSecureService/GetWhereAccountBallanceLessThan", ReplyAction="http://tempuri.org/ICustomerSecureService/GetWhereAccountBallanceLessThanResponse" +
            "")]
        System.Threading.Tasks.Task<ManagingSystem.CustomerSecureService.Customer[]> GetWhereAccountBallanceLessThanAsync(double ballance);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerSecureService/GetById", ReplyAction="http://tempuri.org/ICustomerSecureService/GetByIdResponse")]
        ManagingSystem.CustomerSecureService.Customer GetById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerSecureService/GetById", ReplyAction="http://tempuri.org/ICustomerSecureService/GetByIdResponse")]
        System.Threading.Tasks.Task<ManagingSystem.CustomerSecureService.Customer> GetByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerSecureService/GetByEmail", ReplyAction="http://tempuri.org/ICustomerSecureService/GetByEmailResponse")]
        ManagingSystem.CustomerSecureService.Customer GetByEmail(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerSecureService/GetByEmail", ReplyAction="http://tempuri.org/ICustomerSecureService/GetByEmailResponse")]
        System.Threading.Tasks.Task<ManagingSystem.CustomerSecureService.Customer> GetByEmailAsync(string email);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICustomerSecureServiceChannel : ManagingSystem.CustomerSecureService.ICustomerSecureService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CustomerSecureServiceClient : System.ServiceModel.ClientBase<ManagingSystem.CustomerSecureService.ICustomerSecureService>, ManagingSystem.CustomerSecureService.ICustomerSecureService {
        
        public CustomerSecureServiceClient() {
        }
        
        public CustomerSecureServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CustomerSecureServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomerSecureServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomerSecureServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ManagingSystem.CustomerSecureService.Customer[] GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<ManagingSystem.CustomerSecureService.Customer[]> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
        
        public ManagingSystem.CustomerSecureService.Customer[] GetWhereAccountBallanceMoreThan(double ballance) {
            return base.Channel.GetWhereAccountBallanceMoreThan(ballance);
        }
        
        public System.Threading.Tasks.Task<ManagingSystem.CustomerSecureService.Customer[]> GetWhereAccountBallanceMoreThanAsync(double ballance) {
            return base.Channel.GetWhereAccountBallanceMoreThanAsync(ballance);
        }
        
        public ManagingSystem.CustomerSecureService.Customer[] GetWhereAccountBallanceLessThan(double ballance) {
            return base.Channel.GetWhereAccountBallanceLessThan(ballance);
        }
        
        public System.Threading.Tasks.Task<ManagingSystem.CustomerSecureService.Customer[]> GetWhereAccountBallanceLessThanAsync(double ballance) {
            return base.Channel.GetWhereAccountBallanceLessThanAsync(ballance);
        }
        
        public ManagingSystem.CustomerSecureService.Customer GetById(int id) {
            return base.Channel.GetById(id);
        }
        
        public System.Threading.Tasks.Task<ManagingSystem.CustomerSecureService.Customer> GetByIdAsync(int id) {
            return base.Channel.GetByIdAsync(id);
        }
        
        public ManagingSystem.CustomerSecureService.Customer GetByEmail(string email) {
            return base.Channel.GetByEmail(email);
        }
        
        public System.Threading.Tasks.Task<ManagingSystem.CustomerSecureService.Customer> GetByEmailAsync(string email) {
            return base.Channel.GetByEmailAsync(email);
        }
    }
}
