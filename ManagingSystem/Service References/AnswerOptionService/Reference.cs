//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ManagingSystem.AnswerOptionService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AnswerOption", Namespace="Wpk.Entities")]
    [System.SerializableAttribute()]
    public partial class AnswerOption : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfVotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuestionnaireIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfVotes {
            get {
                return this.NumberOfVotesField;
            }
            set {
                if ((this.NumberOfVotesField.Equals(value) != true)) {
                    this.NumberOfVotesField = value;
                    this.RaisePropertyChanged("NumberOfVotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Option {
            get {
                return this.OptionField;
            }
            set {
                if ((object.ReferenceEquals(this.OptionField, value) != true)) {
                    this.OptionField = value;
                    this.RaisePropertyChanged("Option");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QuestionnaireId {
            get {
                return this.QuestionnaireIdField;
            }
            set {
                if ((this.QuestionnaireIdField.Equals(value) != true)) {
                    this.QuestionnaireIdField = value;
                    this.RaisePropertyChanged("QuestionnaireId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AnswerOptionService.IAnswerOptionSecureService")]
    public interface IAnswerOptionSecureService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnswerOptionSecureService/GetAllWithDeleted", ReplyAction="http://tempuri.org/IAnswerOptionSecureService/GetAllWithDeletedResponse")]
        ManagingSystem.AnswerOptionService.AnswerOption[] GetAllWithDeleted();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnswerOptionSecureService/GetAllWithDeleted", ReplyAction="http://tempuri.org/IAnswerOptionSecureService/GetAllWithDeletedResponse")]
        System.Threading.Tasks.Task<ManagingSystem.AnswerOptionService.AnswerOption[]> GetAllWithDeletedAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnswerOptionSecureService/Create", ReplyAction="http://tempuri.org/IAnswerOptionSecureService/CreateResponse")]
        void Create(ManagingSystem.AnswerOptionService.AnswerOption answerOption);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnswerOptionSecureService/Create", ReplyAction="http://tempuri.org/IAnswerOptionSecureService/CreateResponse")]
        System.Threading.Tasks.Task CreateAsync(ManagingSystem.AnswerOptionService.AnswerOption answerOption);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnswerOptionSecureService/Update", ReplyAction="http://tempuri.org/IAnswerOptionSecureService/UpdateResponse")]
        void Update(ManagingSystem.AnswerOptionService.AnswerOption answerOption);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnswerOptionSecureService/Update", ReplyAction="http://tempuri.org/IAnswerOptionSecureService/UpdateResponse")]
        System.Threading.Tasks.Task UpdateAsync(ManagingSystem.AnswerOptionService.AnswerOption answerOption);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnswerOptionSecureService/DeleteById", ReplyAction="http://tempuri.org/IAnswerOptionSecureService/DeleteByIdResponse")]
        void DeleteById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnswerOptionSecureService/DeleteById", ReplyAction="http://tempuri.org/IAnswerOptionSecureService/DeleteByIdResponse")]
        System.Threading.Tasks.Task DeleteByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnswerOptionSecureService/UndeleteById", ReplyAction="http://tempuri.org/IAnswerOptionSecureService/UndeleteByIdResponse")]
        void UndeleteById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnswerOptionSecureService/UndeleteById", ReplyAction="http://tempuri.org/IAnswerOptionSecureService/UndeleteByIdResponse")]
        System.Threading.Tasks.Task UndeleteByIdAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAnswerOptionSecureServiceChannel : ManagingSystem.AnswerOptionService.IAnswerOptionSecureService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AnswerOptionSecureServiceClient : System.ServiceModel.ClientBase<ManagingSystem.AnswerOptionService.IAnswerOptionSecureService>, ManagingSystem.AnswerOptionService.IAnswerOptionSecureService {
        
        public AnswerOptionSecureServiceClient() {
        }
        
        public AnswerOptionSecureServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AnswerOptionSecureServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AnswerOptionSecureServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AnswerOptionSecureServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ManagingSystem.AnswerOptionService.AnswerOption[] GetAllWithDeleted() {
            return base.Channel.GetAllWithDeleted();
        }
        
        public System.Threading.Tasks.Task<ManagingSystem.AnswerOptionService.AnswerOption[]> GetAllWithDeletedAsync() {
            return base.Channel.GetAllWithDeletedAsync();
        }
        
        public void Create(ManagingSystem.AnswerOptionService.AnswerOption answerOption) {
            base.Channel.Create(answerOption);
        }
        
        public System.Threading.Tasks.Task CreateAsync(ManagingSystem.AnswerOptionService.AnswerOption answerOption) {
            return base.Channel.CreateAsync(answerOption);
        }
        
        public void Update(ManagingSystem.AnswerOptionService.AnswerOption answerOption) {
            base.Channel.Update(answerOption);
        }
        
        public System.Threading.Tasks.Task UpdateAsync(ManagingSystem.AnswerOptionService.AnswerOption answerOption) {
            return base.Channel.UpdateAsync(answerOption);
        }
        
        public void DeleteById(int id) {
            base.Channel.DeleteById(id);
        }
        
        public System.Threading.Tasks.Task DeleteByIdAsync(int id) {
            return base.Channel.DeleteByIdAsync(id);
        }
        
        public void UndeleteById(int id) {
            base.Channel.UndeleteById(id);
        }
        
        public System.Threading.Tasks.Task UndeleteByIdAsync(int id) {
            return base.Channel.UndeleteByIdAsync(id);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AnswerOptionService.IAnswerOptionService")]
    public interface IAnswerOptionService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnswerOptionService/GetAll", ReplyAction="http://tempuri.org/IAnswerOptionService/GetAllResponse")]
        ManagingSystem.AnswerOptionService.AnswerOption[] GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnswerOptionService/GetAll", ReplyAction="http://tempuri.org/IAnswerOptionService/GetAllResponse")]
        System.Threading.Tasks.Task<ManagingSystem.AnswerOptionService.AnswerOption[]> GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnswerOptionService/GetByQuestionnaireId", ReplyAction="http://tempuri.org/IAnswerOptionService/GetByQuestionnaireIdResponse")]
        ManagingSystem.AnswerOptionService.AnswerOption[] GetByQuestionnaireId(int questionnaireId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnswerOptionService/GetByQuestionnaireId", ReplyAction="http://tempuri.org/IAnswerOptionService/GetByQuestionnaireIdResponse")]
        System.Threading.Tasks.Task<ManagingSystem.AnswerOptionService.AnswerOption[]> GetByQuestionnaireIdAsync(int questionnaireId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnswerOptionService/GetById", ReplyAction="http://tempuri.org/IAnswerOptionService/GetByIdResponse")]
        ManagingSystem.AnswerOptionService.AnswerOption GetById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnswerOptionService/GetById", ReplyAction="http://tempuri.org/IAnswerOptionService/GetByIdResponse")]
        System.Threading.Tasks.Task<ManagingSystem.AnswerOptionService.AnswerOption> GetByIdAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAnswerOptionServiceChannel : ManagingSystem.AnswerOptionService.IAnswerOptionService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AnswerOptionServiceClient : System.ServiceModel.ClientBase<ManagingSystem.AnswerOptionService.IAnswerOptionService>, ManagingSystem.AnswerOptionService.IAnswerOptionService {
        
        public AnswerOptionServiceClient() {
        }
        
        public AnswerOptionServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AnswerOptionServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AnswerOptionServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AnswerOptionServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ManagingSystem.AnswerOptionService.AnswerOption[] GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<ManagingSystem.AnswerOptionService.AnswerOption[]> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
        
        public ManagingSystem.AnswerOptionService.AnswerOption[] GetByQuestionnaireId(int questionnaireId) {
            return base.Channel.GetByQuestionnaireId(questionnaireId);
        }
        
        public System.Threading.Tasks.Task<ManagingSystem.AnswerOptionService.AnswerOption[]> GetByQuestionnaireIdAsync(int questionnaireId) {
            return base.Channel.GetByQuestionnaireIdAsync(questionnaireId);
        }
        
        public ManagingSystem.AnswerOptionService.AnswerOption GetById(int id) {
            return base.Channel.GetById(id);
        }
        
        public System.Threading.Tasks.Task<ManagingSystem.AnswerOptionService.AnswerOption> GetByIdAsync(int id) {
            return base.Channel.GetByIdAsync(id);
        }
    }
}
