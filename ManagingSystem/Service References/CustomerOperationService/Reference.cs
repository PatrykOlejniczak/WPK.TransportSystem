//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ManagingSystem.CustomerOperationService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BoostAccount", Namespace="Wpk.Entities")]
    [System.SerializableAttribute()]
    public partial class BoostAccount : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CustomerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateOfBoostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime GeneratedDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((this.CustomerIdField.Equals(value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateOfBoost {
            get {
                return this.DateOfBoostField;
            }
            set {
                if ((this.DateOfBoostField.Equals(value) != true)) {
                    this.DateOfBoostField = value;
                    this.RaisePropertyChanged("DateOfBoost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime GeneratedDateTime {
            get {
                return this.GeneratedDateTimeField;
            }
            set {
                if ((this.GeneratedDateTimeField.Equals(value) != true)) {
                    this.GeneratedDateTimeField = value;
                    this.RaisePropertyChanged("GeneratedDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExpandedPurchaseTicket", Namespace="Wpk.Entities")]
    [System.SerializableAttribute()]
    public partial class ExpandedPurchaseTicket : ManagingSystem.CustomerOperationService.PurchaseTicket {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ExpireDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TicketNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ExpireDateTime {
            get {
                return this.ExpireDateTimeField;
            }
            set {
                if ((this.ExpireDateTimeField.Equals(value) != true)) {
                    this.ExpireDateTimeField = value;
                    this.RaisePropertyChanged("ExpireDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TicketName {
            get {
                return this.TicketNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TicketNameField, value) != true)) {
                    this.TicketNameField = value;
                    this.RaisePropertyChanged("TicketName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PurchaseTicket", Namespace="Wpk.Entities")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ManagingSystem.CustomerOperationService.ExpandedPurchaseTicket))]
    public partial class PurchaseTicket : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustomerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateOfPurchaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DiscountIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentIdentificationNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameTicketOwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameTicketOwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TicketIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((this.CustomerIdField.Equals(value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateOfPurchase {
            get {
                return this.DateOfPurchaseField;
            }
            set {
                if ((this.DateOfPurchaseField.Equals(value) != true)) {
                    this.DateOfPurchaseField = value;
                    this.RaisePropertyChanged("DateOfPurchase");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceId {
            get {
                return this.DeviceIdField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceIdField, value) != true)) {
                    this.DeviceIdField = value;
                    this.RaisePropertyChanged("DeviceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DiscountId {
            get {
                return this.DiscountIdField;
            }
            set {
                if ((this.DiscountIdField.Equals(value) != true)) {
                    this.DiscountIdField = value;
                    this.RaisePropertyChanged("DiscountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentIdentificationNumber {
            get {
                return this.DocumentIdentificationNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentIdentificationNumberField, value) != true)) {
                    this.DocumentIdentificationNumberField = value;
                    this.RaisePropertyChanged("DocumentIdentificationNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstNameTicketOwner {
            get {
                return this.FirstNameTicketOwnerField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameTicketOwnerField, value) != true)) {
                    this.FirstNameTicketOwnerField = value;
                    this.RaisePropertyChanged("FirstNameTicketOwner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastNameTicketOwner {
            get {
                return this.LastNameTicketOwnerField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameTicketOwnerField, value) != true)) {
                    this.LastNameTicketOwnerField = value;
                    this.RaisePropertyChanged("LastNameTicketOwner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TicketId {
            get {
                return this.TicketIdField;
            }
            set {
                if ((this.TicketIdField.Equals(value) != true)) {
                    this.TicketIdField = value;
                    this.RaisePropertyChanged("TicketId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CustomerOperationService.ICustomerOperationService")]
    public interface ICustomerOperationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerOperationService/GetAllBoostAccount", ReplyAction="http://tempuri.org/ICustomerOperationService/GetAllBoostAccountResponse")]
        ManagingSystem.CustomerOperationService.BoostAccount[] GetAllBoostAccount(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerOperationService/GetAllBoostAccount", ReplyAction="http://tempuri.org/ICustomerOperationService/GetAllBoostAccountResponse")]
        System.Threading.Tasks.Task<ManagingSystem.CustomerOperationService.BoostAccount[]> GetAllBoostAccountAsync(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerOperationService/GetAllPurchaseTicket", ReplyAction="http://tempuri.org/ICustomerOperationService/GetAllPurchaseTicketResponse")]
        ManagingSystem.CustomerOperationService.ExpandedPurchaseTicket[] GetAllPurchaseTicket(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerOperationService/GetAllPurchaseTicket", ReplyAction="http://tempuri.org/ICustomerOperationService/GetAllPurchaseTicketResponse")]
        System.Threading.Tasks.Task<ManagingSystem.CustomerOperationService.ExpandedPurchaseTicket[]> GetAllPurchaseTicketAsync(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerOperationService/GetActivePurchaseTicket", ReplyAction="http://tempuri.org/ICustomerOperationService/GetActivePurchaseTicketResponse")]
        ManagingSystem.CustomerOperationService.ExpandedPurchaseTicket[] GetActivePurchaseTicket(string userName, string password, string deviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerOperationService/GetActivePurchaseTicket", ReplyAction="http://tempuri.org/ICustomerOperationService/GetActivePurchaseTicketResponse")]
        System.Threading.Tasks.Task<ManagingSystem.CustomerOperationService.ExpandedPurchaseTicket[]> GetActivePurchaseTicketAsync(string userName, string password, string deviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerOperationService/GetAccountBallance", ReplyAction="http://tempuri.org/ICustomerOperationService/GetAccountBallanceResponse")]
        double GetAccountBallance(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerOperationService/GetAccountBallance", ReplyAction="http://tempuri.org/ICustomerOperationService/GetAccountBallanceResponse")]
        System.Threading.Tasks.Task<double> GetAccountBallanceAsync(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerOperationService/UpdateCustomerEmail", ReplyAction="http://tempuri.org/ICustomerOperationService/UpdateCustomerEmailResponse")]
        void UpdateCustomerEmail(string userName, string password, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerOperationService/UpdateCustomerEmail", ReplyAction="http://tempuri.org/ICustomerOperationService/UpdateCustomerEmailResponse")]
        System.Threading.Tasks.Task UpdateCustomerEmailAsync(string userName, string password, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerOperationService/UpdateCustomerPassword", ReplyAction="http://tempuri.org/ICustomerOperationService/UpdateCustomerPasswordResponse")]
        void UpdateCustomerPassword(string userName, string password, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerOperationService/UpdateCustomerPassword", ReplyAction="http://tempuri.org/ICustomerOperationService/UpdateCustomerPasswordResponse")]
        System.Threading.Tasks.Task UpdateCustomerPasswordAsync(string userName, string password, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerOperationService/CreateNewBoostAccount", ReplyAction="http://tempuri.org/ICustomerOperationService/CreateNewBoostAccountResponse")]
        void CreateNewBoostAccount(string userName, string password, string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerOperationService/CreateNewBoostAccount", ReplyAction="http://tempuri.org/ICustomerOperationService/CreateNewBoostAccountResponse")]
        System.Threading.Tasks.Task CreateNewBoostAccountAsync(string userName, string password, string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerOperationService/CreateNewPurchaseTicket", ReplyAction="http://tempuri.org/ICustomerOperationService/CreateNewPurchaseTicketResponse")]
        void CreateNewPurchaseTicket(string userName, string password, ManagingSystem.CustomerOperationService.PurchaseTicket purchaseTicket, int howManyTickets);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerOperationService/CreateNewPurchaseTicket", ReplyAction="http://tempuri.org/ICustomerOperationService/CreateNewPurchaseTicketResponse")]
        System.Threading.Tasks.Task CreateNewPurchaseTicketAsync(string userName, string password, ManagingSystem.CustomerOperationService.PurchaseTicket purchaseTicket, int howManyTickets);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICustomerOperationServiceChannel : ManagingSystem.CustomerOperationService.ICustomerOperationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CustomerOperationServiceClient : System.ServiceModel.ClientBase<ManagingSystem.CustomerOperationService.ICustomerOperationService>, ManagingSystem.CustomerOperationService.ICustomerOperationService {
        
        public CustomerOperationServiceClient() {
        }
        
        public CustomerOperationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CustomerOperationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomerOperationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomerOperationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ManagingSystem.CustomerOperationService.BoostAccount[] GetAllBoostAccount(string userName, string password) {
            return base.Channel.GetAllBoostAccount(userName, password);
        }
        
        public System.Threading.Tasks.Task<ManagingSystem.CustomerOperationService.BoostAccount[]> GetAllBoostAccountAsync(string userName, string password) {
            return base.Channel.GetAllBoostAccountAsync(userName, password);
        }
        
        public ManagingSystem.CustomerOperationService.ExpandedPurchaseTicket[] GetAllPurchaseTicket(string userName, string password) {
            return base.Channel.GetAllPurchaseTicket(userName, password);
        }
        
        public System.Threading.Tasks.Task<ManagingSystem.CustomerOperationService.ExpandedPurchaseTicket[]> GetAllPurchaseTicketAsync(string userName, string password) {
            return base.Channel.GetAllPurchaseTicketAsync(userName, password);
        }
        
        public ManagingSystem.CustomerOperationService.ExpandedPurchaseTicket[] GetActivePurchaseTicket(string userName, string password, string deviceId) {
            return base.Channel.GetActivePurchaseTicket(userName, password, deviceId);
        }
        
        public System.Threading.Tasks.Task<ManagingSystem.CustomerOperationService.ExpandedPurchaseTicket[]> GetActivePurchaseTicketAsync(string userName, string password, string deviceId) {
            return base.Channel.GetActivePurchaseTicketAsync(userName, password, deviceId);
        }
        
        public double GetAccountBallance(string userName, string password) {
            return base.Channel.GetAccountBallance(userName, password);
        }
        
        public System.Threading.Tasks.Task<double> GetAccountBallanceAsync(string userName, string password) {
            return base.Channel.GetAccountBallanceAsync(userName, password);
        }
        
        public void UpdateCustomerEmail(string userName, string password, string email) {
            base.Channel.UpdateCustomerEmail(userName, password, email);
        }
        
        public System.Threading.Tasks.Task UpdateCustomerEmailAsync(string userName, string password, string email) {
            return base.Channel.UpdateCustomerEmailAsync(userName, password, email);
        }
        
        public void UpdateCustomerPassword(string userName, string password, string newPassword) {
            base.Channel.UpdateCustomerPassword(userName, password, newPassword);
        }
        
        public System.Threading.Tasks.Task UpdateCustomerPasswordAsync(string userName, string password, string newPassword) {
            return base.Channel.UpdateCustomerPasswordAsync(userName, password, newPassword);
        }
        
        public void CreateNewBoostAccount(string userName, string password, string code) {
            base.Channel.CreateNewBoostAccount(userName, password, code);
        }
        
        public System.Threading.Tasks.Task CreateNewBoostAccountAsync(string userName, string password, string code) {
            return base.Channel.CreateNewBoostAccountAsync(userName, password, code);
        }
        
        public void CreateNewPurchaseTicket(string userName, string password, ManagingSystem.CustomerOperationService.PurchaseTicket purchaseTicket, int howManyTickets) {
            base.Channel.CreateNewPurchaseTicket(userName, password, purchaseTicket, howManyTickets);
        }
        
        public System.Threading.Tasks.Task CreateNewPurchaseTicketAsync(string userName, string password, ManagingSystem.CustomerOperationService.PurchaseTicket purchaseTicket, int howManyTickets) {
            return base.Channel.CreateNewPurchaseTicketAsync(userName, password, purchaseTicket, howManyTickets);
        }
    }
}
